(()=>{"use strict";var t=document.querySelector(".page"),e=t.querySelector(".profile"),r=e.querySelector(".profile__avatar"),n=e.querySelector(".profile__name"),o=e.querySelector(".profile__description"),i=e.querySelector(".profile__overlay"),u=e.querySelector(".button_type_edit-profile"),c=(t.querySelector(".popup_type_edit-profile"),t.querySelector(".form_type_edit-profile")),a=c.querySelector(".form__input_type_name"),s=c.querySelector(".form__input_type_description"),l=e.querySelector(".button_type_add-card"),f=(t.querySelector(".popup_type_add-card"),t.querySelector(".form_type_add-card")),p=(f.querySelector(".form__input_type_card-name"),f.querySelector(".form__input_type_card-link"),t.querySelector(".popup_type_big-pic")),y=(p.querySelector(".big-pic__image"),p.querySelector(".big-pic__caption"),t.querySelector(".elements__grid"),t.querySelectorAll(".form")),h=(t.querySelectorAll(".popup"),{cardSelector:".card",imageSelector:".card__image",captionSelector:".card__caption",likeSelector:".card__like",likeCountSelector:".card__like-count",removeSelector:".card__remove",activeLikeClass:"card__like_is-active",hiddenButtonClass:"button_is-hidden"}),d={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_is-inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_is-active"};function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function m(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==v(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===v(o)?o:String(o)),n)}var o}var _=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var e,r;return e=t,(r=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getInitialCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"getProfileInfo",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"setProfileInfo",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then((function(t){return e._checkResponse(t)}))}},{key:"setNewAvatar",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then((function(t){return e._checkResponse(t)}))}},{key:"setNewCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then((function(t){return e._checkResponse(t)}))}},{key:"removeCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t._data._id),{method:"DELETE",headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"setCardLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t._id,"/likes"),{method:"PUT",headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"removeCardLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t._id,"/likes"),{method:"DELETE",headers:this._headers}).then((function(t){return e._checkResponse(t)}))}}])&&m(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==b(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===b(o)?o:String(o)),n)}var o}var g=function(){function t(e){var r=e.data,n=e.configCard,o=e.cardTemplate,i=e.handleImageClick,u=e.handleRemoveButtonClick,c=e.handleLikeClick,a=e.userID;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=r,this._userID=a,this._image=r.link,this._caption=r.name,this._cardSelector=n.cardSelector,this._imageSelector=n.imageSelector,this._captionSelector=n.captionSelector,this._likeSelector=n.likeSelector,this._likeCountSelector=n.likeCountSelector,this._removeSelector=n.removeSelector,this._hiddenButtonClass=n.hiddenButtonClass,this._activeLikeClass=n.activeLikeClass,this._cardTemplate=o,this._handleImageClick=i,this._handleRemoveButtonClick=u,this._handleLikeClick=c}var e,r;return e=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplate).content.querySelector(this._cardSelector).cloneNode(!0)}},{key:"_setEventListeners",value:function(){var t=this;this._cardLike.addEventListener("click",(function(){return t._handleLikeClick(t)})),this._cardRemove.addEventListener("click",(function(){return t._handleRemoveButtonClick(t)})),this._cardImage.addEventListener("click",(function(){return t._handleImageClick(t._data)}))}},{key:"_hideRemoveButton",value:function(){this._data.owner._id!==this._userID&&this._card.querySelector(this._removeSelector).classList.add(this._hiddenButtonClass)}},{key:"_getLikesCount",value:function(){this._likeCount.textContent=this._data.likes.length}},{key:"updateLikesCount",value:function(t){this._likeCount.textContent=t.likes.length,this._data.likes=t.likes}},{key:"getLikesArray",value:function(){return this._data.likes}},{key:"removeCard",value:function(){this._card.remove()}},{key:"setLike",value:function(){this._card.querySelector(this._likeSelector).classList.add(this._activeLikeClass)}},{key:"removeLike",value:function(){this._card.querySelector(this._likeSelector).classList.remove(this._activeLikeClass)}},{key:"createCard",value:function(){var t=this;this._card=this._getTemplate(),this._cardLike=this._card.querySelector(this._likeSelector),this._cardRemove=this._card.querySelector(this._removeSelector),this._cardImage=this._card.querySelector(this._imageSelector),this._likeCount=this._card.querySelector(this._likeCountSelector),this._setEventListeners(),this._hideRemoveButton(),this._getLikesCount();var e=this._data.likes;e.length>0&&e.some((function(e){return e._id===t._userID}))&&this.setLike();var r=this._card.querySelector(this._imageSelector),n=this._card.querySelector(this._captionSelector);return r.src=this._image,r.alt=this._caption,n.textContent=this._caption,this._card}}])&&S(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,L(n.key),n)}}function C(t,e,r){return e&&w(t.prototype,e),r&&w(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function E(t,e,r){return(e=L(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function L(t){var e=function(t,e){if("object"!==k(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===k(e)?e:String(e)}var O=C((function t(e,r){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),E(this,"_hasInvalidInput",(function(t){return Array.from(t).some((function(t){return!t.validity.valid}))})),E(this,"_disableSubmitButton",(function(){n._submitButton.classList.add(n._inactiveButtonClass),n._submitButton.setAttribute("disabled",!0)})),E(this,"_enableSubmitButton",(function(){n._submitButton.classList.remove(n._inactiveButtonClass),n._submitButton.removeAttribute("disabled")})),E(this,"_toggleButtonState",(function(t){n._hasInvalidInput(t)?n._disableSubmitButton():n._enableSubmitButton()})),E(this,"_showInputError",(function(t){var e=n._form.querySelector(".".concat(t.id,"-error"));t.classList.add(n._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(n._errorClass)})),E(this,"_hideInputError",(function(t){var e=n._form.querySelector(".".concat(t.id,"-error"));t.classList.remove(n._inputErrorClass),e.textContent="",e.classList.remove(n._errorClass)})),E(this,"_checkInputValidity",(function(t){t.validity.valid?n._hideInputError(t):n._showInputError(t)})),E(this,"_setEventListeners",(function(){n._toggleButtonState(n._inputList),n._form.addEventListener("reset",(function(){n._disableSubmitButton(),n._resetFormErrors()})),n._inputList.forEach((function(t){return t.addEventListener("input",(function(){n._checkInputValidity(t),n._toggleButtonState(n._inputList)}))}))})),E(this,"_resetFormErrors",(function(){n._inputList.forEach((function(t){return n._hideInputError(t)}))})),E(this,"enableValidation",(function(){n._form.addEventListener("submit",(function(t){return t.preventDefault()})),n._setEventListeners()})),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=r,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList=this._form.querySelectorAll(this._inputSelector)}));function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function P(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==j(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==j(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===j(o)?o:String(o)),n)}var o}var I=function(){function t(e,r){var n=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=n,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"addItemsAppend",value:function(t){this._container.append(t)}},{key:"addItemsPrepend",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){return e._renderer(t)}))}}])&&P(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function R(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===q(o)?o:String(o)),n)}var o}var B=function(){function t(e){var r=e.userName,n=e.userInfo,o=e.userAvatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=r,this._userInfo=n,this._userAvatar=o}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,info:this._userInfo.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,r=t.about;this._userName.textContent=e,this._userInfo.textContent=r}},{key:"setUserAvatar",value:function(t){var e=t.name,r=t.avatar;this._userAvatar.src=r,this._userAvatar.alt=e}}])&&R(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===T(o)?o:String(o)),n)}var o}var U=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._popupIsOpenClass="popup_is-open",this._handleEscClose=this._handleEscClose.bind(this)}var e,r;return e=t,(r=[{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){var r=e.target.classList;(r.contains("popup")||r.contains("button_type_close"))&&t.close()}))}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add(this._popupIsOpenClass)}},{key:"close",value:function(){this._popup.classList.remove(this._popupIsOpenClass),document.removeEventListener("keydown",this._handleEscClose)}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function D(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=F(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},N.apply(this,arguments)}function V(t,e){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},V(t,e)}function F(t){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},F(t)}var J=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&V(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=F(n);if(o){var r=F(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===x(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._handleFormSubmit=n,r._inputList=r._popup.querySelectorAll(".form__input"),r._form=r._popup.querySelector(".form"),r._submitButton=r._popup.querySelector(".form__submit-button"),r}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setEventListeners",value:function(){var t=this;this._form.addEventListener("submit",(function(){return t._handleFormSubmit(t._getInputValues())})),N(F(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){N(F(u.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoadnig",value:function(t){this._submitButton.textContent=t}}])&&D(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(U);function G(t){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},G(t)}function H(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==G(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===G(o)?o:String(o)),n)}var o}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=$(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},M.apply(this,arguments)}function z(t,e){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},z(t,e)}function $(t){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},$(t)}var K=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&z(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=$(n);if(o){var r=$(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===G(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupImage=e._popup.querySelector(".big-pic__image"),e._popupCaption=e._popup.querySelector(".big-pic__caption"),e}return e=u,(r=[{key:"open",value:function(t){var e=t.name,r=t.link;M($(u.prototype),"open",this).call(this),this._popupImage.src=r,this._popupImage.alt=e,this._popupCaption.textContent=e}},{key:"close",value:function(){M($(u.prototype),"close",this).call(this),this._popupImage.src="#",this._popupImage.alt="",this._popupCaption.textContent=""}}])&&H(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(U);function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function W(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===Q(o)?o:String(o)),n)}var o}function X(){return X="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Z(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},X.apply(this,arguments)}function Y(t,e){return Y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},Y(t,e)}function Z(t){return Z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Z(t)}var tt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Y(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=Z(n);if(o){var r=Z(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Q(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),i.apply(this,arguments)}return e=u,(r=[{key:"setSubmitAction",value:function(t){this._handleSubmitCallback=t}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("submit",(function(e){e.preventDefault(),t._handleSubmitCallback()})),X(Z(u.prototype),"setEventListeners",this).call(this)}}])&&W(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(U);function et(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var rt=null,nt=new _({baseUrl:"https://nomoreparties.co/v1/cohort-63",headers:{authorization:"67643684-28d3-4968-8243-9bcc86cf5636","Content-Type":"application/json"}}),ot=function(t){return new g({data:t,configCard:h,cardTemplate:"#card-template",handleImageClick:ht,handleRemoveButtonClick:pt,handleLikeClick:yt,userID:rt}).createCard()},it=new I({renderer:function(t){var e=ot(t);it.addItemsAppend(e)}},".elements__grid"),ut=new B({userName:n,userInfo:o,userAvatar:r}),ct=new J({handleFormSubmit:function(t){ct.renderLoadnig("Сохранение..."),nt.setProfileInfo({name:t["profile-name"],about:t["profile-description"]}).then((function(t){return ut.setUserInfo(t)})).then((function(){return ct.close()})).catch((function(t){return console.log(t)})).finally((function(){return ct.renderLoadnig("Сохранить")}))}},".popup_type_edit-profile");ct.setEventListeners();var at=new J({handleFormSubmit:function(t){at.renderLoadnig("Создание..."),nt.setNewCard({name:t["card-name"],link:t["card-link"]}).then((function(t){var e=ot(t);it.addItemsPrepend(e)})).then((function(){return at.close()})).catch((function(t){return console.log(t)})).finally((function(){return ct.renderLoadnig("Создать")}))}},".popup_type_add-card");at.setEventListeners();var st=new J({handleFormSubmit:function(t){st.renderLoadnig("Сохранение..."),nt.setNewAvatar({avatar:t["avatar-link"]}).then((function(t){return ut.setUserAvatar(t)})).then((function(){return st.close()})).catch((function(t){return console.log(t)})).finally((function(){return st.renderLoadnig("Сохранить")}))}},".popup_type_change-avatar");st.setEventListeners();var lt=new tt(".popup_type_remove-card");lt.setEventListeners();var ft=new K(".popup_type_big-pic");ft.setEventListeners(),y.forEach((function(t){new O(d,t).enableValidation()}));var pt=function(t){lt.open(),lt.setSubmitAction((function(){nt.removeCard(t).then((function(){lt.close(),t.removeCard()})).catch((function(t){return console.log(t)}))}))},yt=function(t){t.getLikesArray().some((function(t){return t._id===rt}))?nt.removeCardLike(t._data).then((function(e){t.updateLikesCount(e),t.removeLike()})).catch((function(t){return console.log(t)})):nt.setCardLike(t._data).then((function(e){t.updateLikesCount(e),t.setLike()})).catch((function(t){return console.log(t)}))},ht=function(t){return ft.open(t)};i.addEventListener("click",(function(){return st.open()})),u.addEventListener("click",(function(){var t=ut.getUserInfo();a.value=t.name,s.value=t.info,ct.open()})),l.addEventListener("click",(function(){return at.open()})),Promise.all([nt.getProfileInfo(),nt.getInitialCards()]).then((function(t){var e,r,n=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,c=[],a=!0,s=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;a=!1}else for(;!(a=(n=i.call(r)).done)&&(c.push(n.value),c.length!==e);a=!0);}catch(t){s=!0,o=t}finally{try{if(!a&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(s)throw o}}return c}}(e,r)||function(t,e){if(t){if("string"==typeof t)return et(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?et(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];rt=o._id,ut.setUserInfo(o),ut.setUserAvatar(o),it.renderItems(i)})).catch((function(t){return console.log(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,